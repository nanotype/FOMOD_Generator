<Window xmlns:RoomCarto="clr-namespace:test_databind.Modules.RoomCarto" 
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:local="clr-namespace:test_databind"
    x:Class="test_databind.MainWindow"
		mc:Ignorable="d"
		Title="MainWindow" Height="500" Width="900">
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Style/TabItem.xaml"/>
                <ResourceDictionary Source="Style/ListViewHeader.xaml"/>
                <ResourceDictionary Source="Style/ProgressBar.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>
    <DockPanel MouseDown="DockPanel_MouseDown">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_Menu">
                <MenuItem Header="_Nouveau"/>
                <MenuItem Header="_Ouvrir">
                    <MenuItem Header="un truc"/>
                    <MenuItem Header="un autre truc"/>
                </MenuItem>
                <MenuItem Header="_Sauvegarder"/>
                <Separator/>
                <MenuItem Header="_Quitter"/>
            </MenuItem>
        </Menu>
        <TabControl x:Name="tabControl" 
                    TabStripPlacement="{Binding SelectedItem, ElementName=TabControl_Placement}"
                    Margin="10,10,10,10">
            <TabItem>
                <TabItem.Header>
                    <Label Content="_1"/>
                </TabItem.Header>
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBox x:Name="textBox" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True" Text="Linked text" SpellCheck.IsEnabled="True" Grid.Column="0" Grid.Row="0" Margin="0, 0, 1, 0" ToolTip="Ceci est un tooltip"/>
                    <TextBlock x:Name="textBlock" TextWrapping="Wrap" Text="{Binding Text, ElementName=textBox}" Grid.Column="1" Grid.Row="0" Background="{Binding Background, ElementName=textBox}" Margin="1, 1, 1, 1"/>
                    <TextBox x:Name="textBox1" TextWrapping="Wrap" Text="{Binding Thomas}" Grid.Row="1" Grid.ColumnSpan="2" Margin="0, 2, 0, 0"/>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_2"/>
                </TabItem.Header>
                <Grid Background="#FFE5E5E5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <local:MyFirstUserControl Title="Titre : " Description="bonjour Thomas" Grid.Row="0"/>
                    <local:MyFirstUserControl Title="Descriptif : " Grid.Row="1"/>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_3"/>
                </TabItem.Header>
                <Grid Background="#FFE5E5E5">
                    <TextBox x:Name="TBox_ApplicationNameChanger" Text="{Binding Title, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_4"/>
                </TabItem.Header>
                <Grid Background="#FFE5E5E5">
                    <DockPanel Margin="10">
                        <StackPanel DockPanel.Dock="Right" Margin="10, 0, 0, 0">
                            <Button x:Name="B_AddUser" Click="B_AddUser_Click" Content="Add user"/>
                            <Button x:Name="B_ChangeUser" Click="B_ChangeUser_Click" Content="Change User" Margin="0, 10"/>
                            <Button x:Name="B_DeleteUser" Click="B_DeleteUser_Click" Content="Delete User"/>
                        </StackPanel>
                        <ListBox x:Name="LB_UserList" DisplayMemberPath="Name"/>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_5"/>
                </TabItem.Header>
                <StackPanel Background="#FFE5E5E5">
                    <Button x:Name="btnSimpleMessageBox" Click="BtnSimpleMessageBox_Click" Content="Simple MessageBox"/>
                    <Button x:Name="btnMessageBoxWithTitle" Click="BtnMessageBoxWithTitle_Click" Content="MessageBox with title"/>
                    <Button x:Name="btnMessageBoxWithButtons" Click="BtnMessageBoxWithButtons_Click" Content="MessageBox with buttons"/>
                    <Button x:Name="btnMessageBoxWithResponse" Click="BtnMessageBoxWithResponse_Click" Content="MessageBox with response"/>
                    <Button x:Name="btnMessageBoxWithIcon" Click="BtnMessageBoxWithIcon_Click" Content="MessageBox with icon"/>
                    <Button x:Name="btnMessageBoxWithDefaultChoice" Click="BtnMessageBoxWithDefaultChoice_Click" Content="MessageBox with default choice"/>
                </StackPanel>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_6"/>
                </TabItem.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="350" Width="400*"/>
                        <ColumnDefinition Width="2"/>
                        <ColumnDefinition MinWidth="200" Width="*"/>
                    </Grid.ColumnDefinitions>
                    <DockPanel Grid.Column="0" Background="#FFE5E5E5" MinWidth="200">
                        <Grid DockPanel.Dock="Top" Margin="0, 10, 0, 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="BtnOpenFile" Click="BtnOpenFile_Click" Grid.Column="1" Content="Récupérer contenu fichier texte"/>
                            <Button x:Name="BtnSaveFile" Click="BtnSaveFile_Click" Grid.Column="3" Content="Sauvegarder dans un fichier"/>
                        </Grid>
                        <TextBox x:Name="TboxContentFile" TextWrapping="Wrap" AcceptsReturn="True" AcceptsTab="True" VerticalScrollBarVisibility="Auto"/>
                    </DockPanel>
                    <GridSplitter Grid.Column="1" Width="2" HorizontalAlignment="Stretch"/>
                    <DockPanel Grid.Column="2" Background="#FFE5E5E5">
                        <Grid DockPanel.Dock="Top" Background="#FFE5E5E5" Margin="0, 10, 0, 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Button x:Name="BtnOpenBrowser" Click="BtnOpenBrowser_Click" Grid.Column="1">
                                <Button.ToolTip>
                                    <StackPanel>
                                        <TextBlock FontWeight="Bold" FontSize="14" Margin="0, 0, 0, 5"><Run Text="super Tooltip !!!"/></TextBlock>
                                        <TextBlock TextWrapping="Wrap"><Run Text="ceci est une seconde section"/></TextBlock>
                                        <Border BorderBrush="Silver" BorderThickness="0, 1, 0, 0" Margin="0,8"/>
                                        <TextBlock TextWrapping="Wrap" FontStyle="Italic"><Run Text="Appuyer sur F1 pour ne rien faire"/></TextBlock>
                                    </StackPanel>
                                </Button.ToolTip> Selectionner un dossier
                            </Button>
                        </Grid>
                        <ListBox x:Name="LB_ContentFolder">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Margin="5, 0"  Source="{Binding Image}"/>
                                        <TextBlock VerticalAlignment="Center" Text="{Binding ElementName}"/>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </DockPanel>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_7"/>
                </TabItem.Header>
                <Grid Background="#FFE5E5E5">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                        <TextBlock><Run Text="Hello world, je suis :"/></TextBlock>
                        <TextBlock x:Name="TBlock_Name" Margin="0,10" TextAlignment="Center" FontWeight="Bold"><Run Text="[Aucun nom renseigné]"/></TextBlock>
                        <Button x:Name="B_MeNommer" Click="B_MeNommer_Click" Content="Mais qui suis-je ?"/>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_8"/>
                </TabItem.Header>
                <TabItem.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="faire un truc contextuel"/>
                    </ContextMenu>
                </TabItem.ContextMenu>
                <DockPanel>
                    <Menu DockPanel.Dock="Top">
                        <MenuItem Header="_Menu">
                            <MenuItem IsCheckable="True" Header="_Faire un truc"/>
                        </MenuItem>
                    </Menu>
                    <DockPanel>
                        <ToolBarTray DockPanel.Dock="Top">
                            <ToolBar>
                                <Button Content="Bouton1"/>
                                <Button Content="Bouton2" ToolBar.OverflowMode="AsNeeded"/>
                                <Button Content="Bouton3" ToolBar.OverflowMode="AsNeeded"/>
                                <Separator />
                                <Label Content="Font size:"/>
                                <ComboBox>
                                    <ComboBoxItem Content="10"/>
                                    <ComboBoxItem IsSelected="True" Content="12"/>
                                    <ComboBoxItem Content="14"/>
                                    <ComboBoxItem Content="16"/>
                                </ComboBox>
                            </ToolBar>
                        </ToolBarTray>
                        <TextBox AcceptsReturn="True"/>
                        <ToolBarTray DockPanel.Dock="Right" Orientation="Vertical">
                            <ToolBar>
                                <Button Content="Bouton4" ToolBar.OverflowMode="Never"/>
                                <Button Content="Bouton5" ToolBar.OverflowMode="AsNeeded"/>
                                <Button Content="Bouton6" ToolBar.OverflowMode="Always"/>
                            </ToolBar>
                        </ToolBarTray>
                        <Button x:Name="B_boutonDeroulant" Click="B_boutonDeroulant_Click" Content="Bouton déroulant" Margin="10">
                            <Button.Resources>
                                <ContextMenu x:Key="menuDeroulantBouton">
                                    <MenuItem Header="element 1"/>
                                    <MenuItem Header="element 2"/>
                                    <Separator/>
                                    <MenuItem Header="element 3"/>
                                </ContextMenu>
                            </Button.Resources>
                        </Button>
                    </DockPanel>
                </DockPanel>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_9"/>
                </TabItem.Header>
                <DockPanel>
                    <StatusBar x:Name="SB_fakeDownloadStatus" DockPanel.Dock="Bottom">
                        <StatusBar.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                </Grid>
                            </ItemsPanelTemplate>
                        </StatusBar.ItemsPanel>
                        <StatusBarItem Grid.Column="0" HorizontalAlignment="Right">
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="{Binding Percent, Mode=OneWay}"/>
                                <TextBlock Text=" %"/>
                            </StackPanel>
                        </StatusBarItem>
                        <Separator Grid.Column="1"/>
                        <StatusBarItem Grid.Column="2">
                            <ProgressBar x:Name="PB_fakeDownload" Value="{Binding Percent, Mode=OneWay}" Width="100" Height="16"/>
                        </StatusBarItem>
                    </StatusBar>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="B_LaunchFakeDownload" Content="Fake Download" Click="B_LaunchFakeDownload_Click" Grid.RowSpan="2"/>
                        <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Accent, Mode=TwoWay}"/>
                        <Button Grid.Column="1" Grid.Row="1" Content="test double bond" x:Name="B_testDatabind" Click="B_testDatabind_Click"/>
                    </Grid>
                </DockPanel>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_10"/>
                </TabItem.Header>
                <Grid Background="#FFE5E5E5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition MinWidth="150" Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition MinWidth="150" Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions >
                            <RowDefinition MinHeight="100" Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition MinHeight="100" Height="*"/>
                        </Grid.RowDefinitions>
                        <DockPanel Grid.Row="0">
                            <Label DockPanel.Dock="Top" Content="FlowDocumentScrollViewer"/>
                            <FlowDocumentScrollViewer DockPanel.Dock="Bottom" IsToolBarVisible="True" ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <FlowDocument IsOptimalParagraphEnabled="True" IsHyphenationEnabled="True">
                                    <Paragraph>
                                        <Run Text="Ceci est un texte où j'écris n'importe quoi pour peu que ce soit un texte long et chiant avec beaucoup de mot. C'est surtout un test pour voir comment fonctionne les propriétés optimal et hyphenation. Je sais pas bien ce que c'est mais il parait que c'est cool comme truc."/>
                                    </Paragraph>
                                    <Paragraph>
                                        <Run Text="Ceci est un second paragraphe en esperant que tout ces mots les un contre les autres soient suffisant pour remplir un espace complet. Je devrait ajouter d'autre éléments à mon écran numéro 10. Et le saut de ligne pour rendre visible le XAML c'est la vie."/>
                                    </Paragraph>
                                </FlowDocument>
                            </FlowDocumentScrollViewer>
                        </DockPanel>
                        <GridSplitter Height="5" Grid.Row="1" HorizontalAlignment="Stretch" Background="Silver"/>
                        <DockPanel Grid.Row="2">
                            <Label Content="FlowDocumentReader" DockPanel.Dock="Top"/>
                            <FlowDocumentReader IsFindEnabled="True" DockPanel.Dock="Bottom">
                                <FlowDocument>
                                    <Paragraph>
                                        <Run Text="Ceci est un texte où j'écris n'importe quoi pour peu que ce soit un texte long et chiant avec beaucoup de mot. C'est surtout un test pour voir comment fonctionne les propriétés optimal et hyphenation. Je sais pas bien ce que c'est mais il parait que c'est cool comme truc."/>
                                    </Paragraph>
                                    <Paragraph>
                                        <Run Text="Ceci est un second paragraphe en esperant que tout ces mots les un contre les autres soient suffisant pour remplir un espace complet. Je devrait ajouter d'autre éléments à mon écran numéro 10. Et le saut de ligne pour rendre visible le XAML c'est la vie."/>
                                    </Paragraph>
                                </FlowDocument>
                            </FlowDocumentReader>
                        </DockPanel>
                    </Grid>
                    <GridSplitter Width="5" Background="Black" Grid.Column="1" HorizontalAlignment="Stretch"/>
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition MinHeight="100" Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition MinHeight="100" Height="*"/>
                        </Grid.RowDefinitions>
                        <DockPanel Grid.Row="0">
                            <Label DockPanel.Dock="Top" Content="FlowDocumentPageViewer"/>
                            <FlowDocumentPageViewer DockPanel.Dock="Bottom">
                                <FlowDocument>
                                    <Paragraph>
                                        <Run Text="djmfoqueiu oeiu^hf êiqhfêheifhg rugqy rpughqru gr hgirpugh qiuer qupqghqipruhg qpirugh qrugqruqru qurhg qipuerhg qur hgq upiu quru q priu qgurr qujh quer pquuq^rihgjq rg hquh qiur iqu epgfqiue qpizuegf qpu qu g q rgqprugh qhgpquqpurhgq urh gpquhrg urgu rqîebsdj op i"/>
                                    </Paragraph>
                                    <Paragraph>
                                        <Run Text="djmfoqueiu oeiu^hf êiqhfêheifhg rugqy rpughqru gr hgirpugh qiuer qupqghqipruhg qpirugh qrugqruqru qurhg qipuerhg qur hgq upiu quru q priu qgurr qujh quer pquuq^rihgjq rg hquh qiur iqu epgfqiue qpizuegf qpu qu g q rgqprugh qhgpquqpurhgq urh gpquhrg urgu rqîebsdj op i"/>
                                    </Paragraph>
                                </FlowDocument>
                            </FlowDocumentPageViewer>
                        </DockPanel>
                        <GridSplitter Background="Silver" Height="5" Grid.Row="1" HorizontalAlignment="Stretch"/>
                        <DockPanel Grid.Row="2">
                            <Label DockPanel.Dock="Top" Content="RichTextBox"/>
                            <RichTextBox DockPanel.Dock="Bottom"/>
                        </DockPanel>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_11"/>
                </TabItem.Header>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Border x:Name="Border_RGB" CornerRadius="12, 3, 7, 1" BorderBrush="Silver" BorderThickness="1"  Background="Black" Margin="2, 3">
                        <StackPanel VerticalAlignment="Center">
                            <DockPanel>
                                <Label DockPanel.Dock="Left" Content="_R : " FontWeight="Bold" Target="{Binding ElementName=TBox_SliderValue_Red}"/>
                                <TextBox x:Name="TBox_SliderValue_Red" DockPanel.Dock="Right" Text="{Binding Value, ElementName=S_Red, UpdateSourceTrigger=PropertyChanged}" Width="40"/>
                                <Slider x:Name="S_Red" Maximum="255" TickFrequency="5" TickPlacement="TopLeft" IsSnapToTickEnabled="True" ValueChanged="RGB_ChangedValue"/>
                            </DockPanel>
                            <Separator Margin="15,2"/>
                            <DockPanel>
                                <Label DockPanel.Dock="Left" Content="_G : " FontWeight="Bold" Target="{Binding ElementName=TBox_SliderValue_Green}"/>
                                <TextBox x:Name="TBox_SliderValue_Green" DockPanel.Dock="Right" Text="{Binding Value, ElementName=S_Green, UpdateSourceTrigger=PropertyChanged}" Width="40"/>
                                <Slider x:Name="S_Green" Maximum="255" TickFrequency="5" TickPlacement="Both" IsSnapToTickEnabled="True" ValueChanged="RGB_ChangedValue"/>
                            </DockPanel>
                            <Separator Margin="15,2"/>
                            <DockPanel>
                                <Label DockPanel.Dock="Left" Content="_B : " FontWeight="Bold" Target="{Binding ElementName=TBox_SliderValue_Blue}"/>
                                <TextBox x:Name="TBox_SliderValue_Blue" DockPanel.Dock="Right" Text="{Binding Value, ElementName=S_Blue, UpdateSourceTrigger=PropertyChanged}" Width="40"/>
                                <Slider x:Name="S_Blue" Maximum="255" TickPlacement="BottomRight" TickFrequency="5" IsSnapToTickEnabled="True" ValueChanged="RGB_ChangedValue"/>
                            </DockPanel>
                        </StackPanel>
                    </Border>
                    <Border BorderThickness="1, 5, 3, 8"  Background="GhostWhite" Margin="2, 3" Grid.Column="1" BorderBrush="BlueViolet">
                        <StackPanel VerticalAlignment="Center">
                            <TextBox Text="{Binding Value, ElementName=sliderReference, UpdateSourceTrigger=PropertyChanged}"/>
                            <Separator/>
                            <Slider x:Name="sliderReference" Maximum="100" Margin="0,5"/>
                            <Slider Maximum="100" TickPlacement="BottomRight" TickFrequency="10" IsSnapToTickEnabled="True" Value="{Binding Value, ElementName=sliderReference}" Margin="0,5"/>
                            <Grid Margin="10,0">
                                <ProgressBar Minimum="0" Maximum="100" Value="{Binding Value, ElementName=sliderReference}"/>
                                <TextBlock Text="{Binding Value, ElementName=sliderReference, StringFormat=\{0:0\}%}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Grid>
                            <ProgressBar IsIndeterminate="True" Margin="10,0" Foreground="#FF0A0AF5"/>
                        </StackPanel>
                    </Border>
                    <Border BorderBrush="Silver" BorderThickness="1"  Margin="2, 3" Grid.Row="1" Grid.ColumnSpan="2">
                        <Border.Background>
                            <LinearGradientBrush StartPoint="0.5, 0" EndPoint="0.5, 1">
                                <GradientStop Color="red" Offset="0"/>
                                <GradientStop Color="Green" Offset="0.20"/>
                                <GradientStop Color="Yellow" Offset="0.60"/>
                                <GradientStop Color="Turquoise" Offset="0.75"/>
                                <GradientStop Color="Blue" Offset="0.80"/>
                                <GradientStop Color="Purple" Offset="1"/>
                            </LinearGradientBrush>
                        </Border.Background>
                    </Border>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_12"/>
                </TabItem.Header>
                <DockPanel>
                    <Grid DockPanel.Dock="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Button x:Name="navigateur_precedent" Content="Précédent" Margin="3,2,2,3" Grid.Column="0" Click="Navigateur_precedent_Click"/>
                        <Button x:Name="navigateur_suivant" Content="Suivant" Margin="3,2,2,3" Grid.Column="1" Click="Navigateur_suivant_Click"/>
                        <TextBox x:Name="navigateur_URI" Grid.Column="2" Margin="2" KeyUp="Navigateur_URI_KeyUp"/>
                        <Button x:Name="navigateur_naviguer" Content="Go !!!" Grid.Column="3" Margin="2" Click="Navigateur_naviguer_Click"/>
                    </Grid>
                    <WebBrowser x:Name="WB_navigateur" Navigating="WB_navigateur_Navigating"/>
                </DockPanel>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="_13"/>
                </TabItem.Header>
                <DockPanel>
                    <ToolBarTray DockPanel.Dock="Top">
                        <ToolBar>
                            <Label Content="Calendrier :"/>
                            <ComboBox x:Name="Calendar_ComboBox_ListDisplayMode" Width="100"/>
                            <Separator/>
                            <ComboBox x:Name="Calendar_ComboBox_ListSelectionMode" Width="100"/>
                        </ToolBar>
                        <ToolBar>
                            <Label Content="Dates d'exclusion :"/>
                            <ComboBox x:Name="Calendar_DatePicker_FormatSelection" Width="100"/>
                        </ToolBar>
                        <ToolBar>
                            <Label Content="Liste :"/>
                            <ComboBox x:Name="Calendar_DateList_FormatSelection" Width="100"/>
                        </ToolBar>
                    </ToolBarTray>
                    <GroupBox Header="Calendrier">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Viewbox Grid.Column="0">
                                <Calendar x:Name="Calendar" 
										  DisplayMode="{Binding SelectedValue, ElementName=Calendar_ComboBox_ListDisplayMode}"
										  SelectionMode="{Binding SelectedItem, ElementName=Calendar_ComboBox_ListSelectionMode}"/>
                            </Viewbox>
                            <DockPanel Margin="10, 5, 0, 0" Grid.Column="1">
                                <Grid DockPanel.Dock="Top" Margin="0, 0, 0, 5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto" MinWidth="70"/>
                                    </Grid.ColumnDefinitions>
                                    <DatePicker x:Name="Calendar_DateExclusion" ToolTip="Date à exclure" Grid.ColumnSpan="2" Margin="0,0,0,2" SelectedDateFormat="{Binding SelectedItem, ElementName=Calendar_DatePicker_FormatSelection}"/>
                                    <Button 
										Grid.Column="2" 
										x:Name="Calendar_DateExclusion_Exclude" 
										ToolTip="Exclure la date" 
										Margin="2,0,0,2" 
										Content="Exclude" 
										Click="Calendar_DateExclusion_Exclude_Click"/>
                                    <DatePicker 
										Grid.Row="1" 
										x:Name="Calendar_RangeExclusion_Start" 
										ToolTip="Date de début" 
										Margin="0,0,1,0"
										SelectedDateFormat="{Binding SelectedItem, ElementName=Calendar_DatePicker_FormatSelection}"/>
                                    <DatePicker 
										Grid.Row="1" 
										Grid.Column="1" 
										x:Name="Calendar_RangeExclusion_End" 
										ToolTip="Date de fin" 
										Margin="1,0,0,0" 
										SelectedDateFormat="{Binding SelectedItem, ElementName=Calendar_DatePicker_FormatSelection}"/>
                                    <Button 
										Grid.Row="1" 
										Grid.Column="2" 
										x:Name="Calendar_RangeExclusion_Exclude" 
										ToolTip="Exclure la période" 
										Margin="2,0,0,0" 
										Content="Exclure la période" 
										Click="Calendar_RangeExclusion_Exclude_Click"/>
                                </Grid>
                                <ListBox x:Name="Calendar_DateList" 
										 ItemsSource="{Binding SelectedDates, ElementName=Calendar}" 
										 SelectedItem="{Binding SelectedDateTime, UpdateSourceTrigger=PropertyChanged}" 
										 SelectionChanged="Calendar_DateList_SelectionChanged" 
										 SelectionMode="{Binding SelectedItem, ElementName=Calendar_DatePicker_FormatSelection}"/>
                            </DockPanel>
                        </Grid>
                    </GroupBox>
                </DockPanel>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="14"/>
                </TabItem.Header>
                <DockPanel>
                    <ToolBarTray DockPanel.Dock="Top">
                        <ToolBar>
                            <Label Content="Expander"/>
                            <ComboBox x:Name="Expander_ToolBar_IsExpanded"  Width="100" ToolBar.OverflowMode="Always"/>
                            <ComboBox x:Name="Expander_ToolBar_ExpandDirection"  Width="100" ToolBar.OverflowMode="Always"/>
                        </ToolBar>
                        <ToolBar>
                            <Label Content="TabPages"/>
                            <ComboBox x:Name="TabControl_Placement" Width="100" ToolBar.OverflowMode="Always"/>
                        </ToolBar>
                    </ToolBarTray>
                    <Expander 
                        x:Name="Expander" Header="Cliquez pour dérouler..."
                        ExpandDirection="{Binding SelectedItem, ElementName=Expander_ToolBar_ExpandDirection}"
                        IsExpanded="{Binding SelectedItem, ElementName=Expander_ToolBar_IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                        <TextBlock TextWrapping="Wrap" FontSize="18"><Run Text="Did you know that WPF is really awesome? Just enter your e-mail address below and we'll send you updates:"/></TextBlock>
                    </Expander>
                </DockPanel>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="15"/>
                </TabItem.Header>
                <DockPanel>
                    <ComboBox
                        x:Name="ProgressBar_Color"
                        IsTextSearchEnabled="True"
                        DockPanel.Dock="Top" SelectionChanged="ProgressBar_Color_SelectionChanged">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <Border BorderBrush="Black" BorderThickness="1">
                                        <Rectangle Fill="{Binding Name}" Width="16" Height="16"/>
                                    </Border>
                                    <TextBlock Text="{Binding Name}"/>
                                </StackPanel>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                    <ItemsControl x:Name="GenericItemControl">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="{Binding Title}"/>
                                    <ProgressBar Grid.Column="1" Minimum="0" Maximum="100" Value="{Binding Completion}" x:Name="testcolorforeground">
                                        <ProgressBar.Style>
                                            <Style TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource ProgressBarColorRed}"/>
                                        </ProgressBar.Style>
                                    </ProgressBar>
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </DockPanel>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="16"/>
                </TabItem.Header>
                <StackPanel>
                    <ListView Margin="2" x:Name="ListViewUserWithOverritedToString" Height="100"/>
                    <ListView Margin="2" x:Name="ListViewUserWithItemTemplate" Height="100">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <WrapPanel>
                                    <TextBlock Text="Name : "/>
                                    <TextBlock Text="{Binding Name}" FontWeight="Bold"/>
                                    <TextBlock Text=", Age : "/>
                                    <TextBlock Text="{Binding Age}" FontWeight="Bold"/>
                                    <TextBlock Text=" ("/>
                                    <TextBlock Text="{Binding Mail}" TextDecorations="Underline" Foreground="Blue" Cursor="Hand"/>
                                    <TextBlock Text=")"/>
                                </WrapPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                    <ListView Margin="2" Height="100" x:Name="ListViewUserWithGridView">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Name" DisplayMemberBinding="{Binding Name}"/>
                                <GridViewColumn Header="Age" Width="120" DisplayMemberBinding="{Binding Age}"/>
                                <GridViewColumn Header="Mail" Width="Auto">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Mail}" TextDecorations="Underline" Foreground="Blue" Cursor="Hand"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <CheckBox x:Name="cbSample" Content="Hello, world?" />
                        <TextBlock Margin="0,20,0,0" FontSize="48" Grid.Row="1">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Text" Value="No" />
                                    <Setter Property="Foreground" Value="Red" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsChecked, ElementName=cbSample}" Value="True">
                                            <Setter Property="Text" Value="Yes!" />
                                            <Setter Property="Foreground" Value="Green" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Grid.RowSpan="2" Grid.Column="1" x:Name="lblStyled" Text="Hello, styled world!" FontSize="18">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.300" Storyboard.TargetProperty="FontSize" To="28" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:0.800" Storyboard.TargetProperty="FontSize" To="18" />
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="Hello, styled world!" FontSize="28" Grid.Column="2" Grid.RowSpan="2">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Foreground" Value="Blue"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Foreground" Value="Red" />
                                            <Setter Property="TextDecorations" Value="Underline" />
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>
                </StackPanel>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="17"/>
                </TabItem.Header>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <TextBox Text="Hover and focus here">
                        <TextBox.Style>
                            <Style TargetType="{x:Type TextBox}">
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsKeyboardFocused" Value="True" />
                                            <Condition Property="IsMouseOver" Value="True" />
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="LightGreen" />
                                    </MultiTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>
                    <StackPanel Grid.Row="1">
                        <CheckBox x:Name="cbSampleYes" Content="Yes" />
                        <CheckBox x:Name="cbSampleSure" Content="I'm sure" />
                        <TextBlock Margin="0,20,0,0" FontSize="28">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="Text" Value="Unverified" />
                                    <Setter Property="Foreground" Value="Red" />
                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsChecked, ElementName=cbSampleYes}" Value="True" />
                                                <Condition Binding="{Binding IsChecked, ElementName=cbSampleSure}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Text" Value="Verified" />
                                            <Setter Property="Foreground" Value="Green" />
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem>
                <TabItem.Header>
                    <Label Content="18"/>
                </TabItem.Header>
                <Grid>
                    <RoomCarto:RoomCarto />
                </Grid>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window>
